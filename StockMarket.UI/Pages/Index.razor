@page "/"
@using Microsoft.AspNetCore.SignalR.Client
@using Newtonsoft.Json
@using StockMarket.Common
@inject NavigationManager NavigationManager
@implements IAsyncDisposable
@inject HttpClient Http

<PageTitle>Stock Symbols Price</PageTitle>

<h1>Stock Symbols Price</h1>

@if (priceUpdates.Count() < 1)
{
    <p><em>Loading...</em></p>
}
else
{
    <hr>
    <table class="table">
        <thead>
            <tr>
                <th>Base</th>
                <th>Currency</th>
                <th>Amount</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var priceUpdate in priceUpdates)
            {
                <tr>
                    <td>@priceUpdate.Data.Base</td>
                    <td>@priceUpdate.Data.Currency</td>
                    <td>@priceUpdate.Data.Amount</td>
                    <td></td>
                </tr>
            }
        </tbody>
    </table>
    <hr />
    <div class="container">
        @if (!userCreated)
        {
            <h2>Create user, to strart trading</h2>
            <hr />
            <div class="form-group">
                <label>User Name</label>
                <input type="text" @bind="@userName" @oninput="OnUserNameInputEvent" />
            </div>
            <button class="btn btn-primary" @onclick="CreateUser">Create</button>
        }
        else
        {
            <h3>Welcome @userName</h3>
            <b>Trensfer $ to USDT to you wallet</b>
            <div class="form-group">
                <label>$</label>
                <input type="number" @bind="@usdtToWallet" @oninput="OnUSDTToInputEvent" />
            </div>
            <button class="btn btn-primary" @onclick="AddUSDT">Transfer</button>

        }
    </div>
}


@code {
    private string apiUrl = "https://localhost:7015";
    private HubConnection hubConnection;
    private List<PriceUpdate> priceUpdates = new List<PriceUpdate>();

    private bool userCreated = false;
    private string userName = null;
    private string usdtToWallet = null;
    private Guid userId;

    protected override async Task OnInitializedAsync()
    {
        var url = new Uri("https://localhost:7015/notificationhub");
        hubConnection = new HubConnectionBuilder()
            .WithUrl(url)
            .Build();

        hubConnection.On<string>("SendAllRates", (message) =>
        {
            priceUpdates = JsonConvert.DeserializeObject<List<PriceUpdate>>(message);
            StateHasChanged();
        });

        await hubConnection.StartAsync();
    }

    public bool IsConnected =>
        hubConnection.State == HubConnectionState.Connected;

    public async ValueTask DisposeAsync()
    {
        await hubConnection.DisposeAsync();
    }

    private void OnUserNameInputEvent(ChangeEventArgs changeEvent)
    {
        userName = (string)changeEvent.Value;
    }

    private async Task CreateUser()
    {
        var user = new User
            {
                Name = userName,
                Id = Guid.NewGuid()
            };
        userId = user.Id;
        var a = await Http.PostAsJsonAsync<User>($"{apiUrl}/api/User/Create", user);
        userCreated = true;
        StateHasChanged();
    }

    private void OnUSDTToInputEvent(ChangeEventArgs changeEvent)
    {
        usdtToWallet = (string)changeEvent.Value;
    }

    private async Task AddUSDT()
    {
        double ammount = Double.Parse(usdtToWallet, System.Globalization.NumberStyles.None);
        var usdt = new Usdt
            {
                UserId = userId,
                Ammount = ammount
            };
        await Http.PostAsJsonAsync<Usdt>($"{apiUrl}/api/User/AddUSDT", usdt);
    }
}